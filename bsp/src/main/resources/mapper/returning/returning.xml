<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="returnig">
		<sql id="returnigWhere">
		<where>
			<if test="sval != null and sval != ''">
				<if test="stype == 'all'">
					ps_title LIKE '%${sval}%' OR b_title LIKE '%${sval}%'
				</if>
				<if test="stype != 'all'">
					${stype} LIKE '%${sval}%'
				</if>
			</if>
		<!-- 	<if test="m_no != 0">
				AND m_no=#{m_no}
			</if> -->
		</where>
	</sql>
	
	
		<!-- 반품/교환 전체 내역 -->
			<select id="selectAll" resultType="returning.ReturningVo" parameterType="returning.ReturningVo">
			SELECT *
			FROM product_io PI JOIN returning r
			ON PI.io_no = r.io_no
			JOIN returning_delivery_info rd
			ON rd.rd_no = r.rd_no
			JOIN book b
			ON b.b_no = r.b_no		<!-- book과 조인시 환불(returning)테이블과 출고(product_io)테이블의 조건은 다름 -->
			JOIN processing_status ps
			ON ps.ps_no = r.ps_no
			<include refid="returnigWhere"/>
			GROUP BY returning_no
			ORDER BY ${orderby} ${direct}
			LIMIT ${strIdx},${pageRow}
			</select>
			
			<!-- 페이징처리 -->
			<select id="count" resultType="int" parameterType="returning.ReturningVo">
			SELECT COUNT(*) 
			FROM product_io PI JOIN returning r
			ON PI.io_no = r.io_no
			JOIN returning_delivery_info rd
			ON rd.rd_no = r.rd_no
			JOIN book b
			ON b.b_no = r.b_no	
			JOIN processing_status ps
			ON ps.ps_no = r.ps_no
			<include refid="returnigWhere"/>
			</select>
		
		
		<!-- 메인창에 출력할 쿼리 (팝업에서 받아오는 리스트) -->
	<!-- 	<select id="selectPopup" resultType="returning.ReturningVo" parameterType="returning.ReturningVo">
			SELECT *
			FROM product_buy PB RIGHT JOIN  product_io PI
			ON PI.pb_no = PB.pb_no
			JOIN book B
			ON PI.b_no = B.b_no AND PI.io_no IN
			<foreach collection="io_nos" index="index" item="no" open="(" close=")" separator=",">
			#{io_no}
			</foreach>
		</select>  -->
		<!-- 반품신청서로 값넘김 -->
		<select id="selectPopupRt" resultType="returning.ReturningVo" parameterType="returning.ReturningVo">
			SELECT *
			FROM product_buy PB RIGHT JOIN  product_io PI
			ON PI.pb_no = PB.pb_no
			JOIN book B
			ON PI.b_no = B.b_no AND PI.io_no = #{io_no}
			</select>
			<!-- 교환반품으로 값넘김 -->
		<select id="selectPopupRp" resultType="returning.ReturningVo" parameterType="returning.ReturningVo">
			SELECT *
			FROM product_buy PB RIGHT JOIN  product_io PI
			ON PI.pb_no = PB.pb_no
			JOIN book B
			ON PI.b_no = B.b_no AND PI.io_no = #{io_no}
			</select>
		<!-- 반품/교환상세 공통 -->
		<select id="detail1" resultType="returning.ReturningVo" parameterType="returning.ReturningVo">
			SELECT * 
			FROM product_io PI JOIN returning r
			ON PI.io_no = r.io_no
			JOIN returning_delivery_info rd
			ON rd.rd_no = r.rd_no
			JOIN book b
			ON b.b_no = r.b_no 	<!-- book과 조인시 환불(returning)테이블과 출고(product_io)테이블의 조건은 다름 -->
			JOIN processing_status ps
			ON ps.ps_no = r.ps_no AND returning_no = #{returning_no}
			GROUP BY returning_no;
		</select>
		<!-- 반품/교환상세 개별(반품도서 종류) -->
		<select id="detail2" resultType="returning.ReturningVo" parameterType="returning.ReturningVo">
			SELECT * 
			FROM product_io PI JOIN returning r
			ON PI.io_no = r.io_no
			JOIN returning_delivery_info rd
			ON rd.rd_no = r.rd_no
			JOIN book b
			ON b.b_no = r.b_no		<!-- book과 조인시 환불(returning)테이블과 출고(product_io)테이블의 조건은 다름 -->
			JOIN processing_status ps
			ON ps.ps_no = r.ps_no AND returning_no=#{returning_no}
		</select>
		

		<!-- 회송정보 insert (회송번호(rd_no) 생성후 반품테이블 insert) -->
		<insert id="insertRd" parameterType="returning.ReturningVo">
		INSERT INTO returning_delivery_info (rd_name, rd_zipcode, rd_addr1, rd_addr2, rd_tel, rd_req, m_no, rd_option)
		VALUES (#{rd_name}, #{rd_zipcode}, #{rd_addr1},#{rd_addr2}, #{rd_tel}, #{rd_req}, #{m_no}, #{rd_option});
		<selectKey resultType="int" keyProperty="rd_no" order="AFTER">
        SELECT LAST_INSERT_ID()    
    	</selectKey>
		</insert>
		
		<!-- 반품 전체 insert -->
		<insert id="insertRt" parameterType="returning.ReturningVo">
		INSERT INTO returning(returning_reason_no, return_reason_detail, returning_category, 
								b_no, ps_no, rd_no, refund_info, returning_amount, io_no ,returning_regdate)
		VALUES(#{returning_reason_no},#{return_reason_detail},#{returning_category}, 
			#{ b_no},#{ps_no},#{rd_no},#{refund_info},#{returning_amount},#{io_no}, NOW());
		<selectKey resultType="int" keyProperty="returning_no" order="AFTER">
        SELECT LAST_INSERT_ID()    
    	</selectKey>
		</insert>
		
		<!-- 반품시 배송상태 변경 -> 반품신청완료  (반품테이블) -->
		<update id="updatePs" parameterType="int">
		UPDATE returning SET 
		ps_no= 11
		WHERE returning_no=#{returning_no} 
		</update>
		
		<!-- 반품시 배송상태 변경 -> 반품신청완료  (출고 테이블) -->
		<update id="updatePi" parameterType="int">
		UPDATE product_io SET 
		ps_no= 11
		WHERE io_no=#{io_no} 
		</update>
		
		<!-- admin -->
		<select id="selectop" resultType="returning.ReturningVo">SELECT * FROM bsp.processing_status; </select>

		<update id="updatepsno" parameterType="returning.ReturningVo">UPDATE returning set ps_no=#{ps_no} WHERE returning_no=#{returning_no}; </update>

		<update id="updateiopsno">UPDATE product_io set ps_no=#{ps_no} WHERE io_no=#{io_no} </update>

		<update id="updatereturnaddr">UPDATE product_io set ps_no=#{ps_no} WHERE io_no=#{io_no} </update>

		
	</mapper>